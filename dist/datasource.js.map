{"version":3,"sources":["../src/datasource.js"],"names":["_","Common","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","jsonData","undefined","keystoneUrl","canUsername","canPassword","canTenant","authToken","metrics","authTokenExpire","options","queryArray","buildQueryParameters","when","data","promiseArray","i","paramObj","endpoints","query","p","analyticsQuery","all","then","allData","returnObj","processResultData","forceRenew","Date","now","token","authDict","getAuthDict","datasourceRequest","method","headers","response","pResp","processAuthResponse","parse","expire","setAuthToken","resp","status","message","title","annotation","enable","annotationObj","reqMethod","reqUrl","alarm","alarmUVEName","alarmNodeName","validWhere","filterQueryFields","where","validFilter","advanced","whereArray","filterArray","transform","start_time","toDate","range","from","end_time","to","select_fields","annotationColAll","table","annotationTable","filter","res","processAnnotationResult","params","apiEndpoint","reqObj","end","start","select","allTableTableName","x","callObj","param","mapToTextValue","result","map","value","d","text","tableName","tableSchema","mapToValue","schemaResult","filtered","unfiltered","allCols","columns","filteredCols","col","numTypes","indexOf","datatype","toLowerCase","filteredCol","each","index","targets","target","hide","strings","selectTable","selCol","selectColumn","retVal","isValidQuery","toTime","fromTime","Math","round","timeCol","isAggField","isAggregateField","intervalMs","qObj","replace","maxDataPoints","push"],"mappings":"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","file":"datasource.js","sourcesContent":["// The MIT License (MIT)\n\n// Copyright (c) 2016 Grafana\n// Copyright 2017, Juniper Networks, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport _ from 'lodash';\nimport Common from './common';\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    if (instanceSettings.jsonData !== undefined) {\n      this.keystoneUrl = instanceSettings.jsonData.keystoneUrl;\n      this.canUsername = instanceSettings.jsonData.canUsername;\n      this.canPassword = instanceSettings.jsonData.canPassword;\n      this.canTenant = instanceSettings.jsonData.canTenant;\n      this.instanceSettings = instanceSettings;\n    }\n    this.authToken = null;\n    this.metrics = null;\n    this.authTokenExpire = null;\n  }\n\n  query(options) {\n    let queryArray = this.buildQueryParameters(options);\n    if (!queryArray) {\n      return this.q.when({data: []});\n    }\n    let promiseArray = [];\n    for (let i in queryArray) {\n      let paramObj = {};\n      paramObj.url = this.url + Common.endpoints.query;\n      paramObj.data = queryArray[i];\n      let p = this.analyticsQuery(paramObj);\n      promiseArray[i] = p;\n    }\n    return this.q.all(promiseArray).then((allData) => {\n      let returnObj = {data: []};\n      for (let i in allData) { returnObj.data[i] = Common.processResultData(allData[i]); }\n      return returnObj;\n    });\n  }\n\n  setAuthToken(forceRenew = false) {\n    if (!forceRenew && this.authToken != null && (this.authTokenExpire - Date.now()) / 1000 > 0) { return this.q.when({token: this.authToken}); }\n    let authDict = Common.getAuthDict(this.canUsername, this.canPassword, this.canTenant);\n    return this.backendSrv.datasourceRequest({\n      url: this.keystoneUrl,\n      method: 'POST',\n      data: authDict,\n      headers: { 'Content-Type': 'application/json' }\n    }).then((response) => {\n      let pResp = Common.processAuthResponse(response);\n      if (pResp != null) {\n        this.authToken = pResp.token;\n        this.authTokenExpire = Date.parse(pResp.expire);\n        return {token: this.authToken};\n      }\n      return {token: null};\n    });\n  }\n\n  testDatasource() {\n    return this.setAuthToken()\n    .then((resp) => {\n      if (!resp.token) { return undefined; }\n      let paramObj = {};\n      paramObj.url = this.url + Common.endpoints.query;\n      paramObj.token = resp.token;\n      return this.analyticsQuery(paramObj);\n    })\n    .then((resp) => {\n      if (resp === undefined || resp.status !== 200) {\n        return {status: 'failure', message: 'Unable to reach keystone or api server', title: 'Failure'};\n      }\n      return {status: 'success', message: 'Data source is working', title: 'Success'};\n    });\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation || !options.annotation.enable) {\n      return this.q.when([]);\n    }\n    let annotationObj = {};\n    let reqMethod = 'POST';\n    let reqUrl = this.url + Common.endpoints.query;\n    if (options.annotation.alarm) {\n      reqUrl = this.url +\n                Common.endpoints.alarm +\n                '/' +\n                options.annotation.alarmUVEName +\n                '/' +\n                options.annotation.alarmNodeName +\n                '?cfilt=UVEAlarms';\n      reqMethod = 'GET';\n    } else {\n      let validWhere = Common.filterQueryFields(options.annotation).where;\n      let validFilter = Common.filterQueryFields({\n        advanced: options.annotation.advanced,\n        whereArray: [options.annotation.filterArray]}).where;\n      validWhere = Common.transform({where: validWhere}).where || [[{'name': 'Source', 'value': '', 'op': 7}]];\n      validFilter = Common.transform({where: validFilter}).where;\n      annotationObj = {\n        start_time: Common.toDate(options.range.from),\n        end_time: Common.toDate(options.range.to),\n        select_fields: Common.annotationColAll,\n        table: Common.annotationTable,\n        where: validWhere\n      };\n      if (validFilter) { annotationObj.filter = validFilter[0]; }\n    }\n    let paramObj = {\n      url: reqUrl,\n      data: annotationObj,\n      method: reqMethod\n    };\n    return this.analyticsQuery(paramObj).then((res) => {\n      return Common.processAnnotationResult(res, options.annotation);\n    });\n  }\n\n  analyticsQuery(params) {\n    let apiEndpoint = params.url;\n    let method = params.method || 'POST';\n    let headers = params.headers || {};\n    let reqObj = {};\n    if (method === 'POST') {\n      if (!params.data) {\n        reqObj.end_time = params.end || 'now';// new Date().getTime();\n        reqObj.start_time = params.start || 'now-10m';// req_obj.end_time - 600000;\n        reqObj.select_fields = params.select || ['name', 'fields.value'];\n        reqObj.table = params.table || Common.allTableTableName;\n        reqObj.where = params.where || [[{'name': 'name', 'value': 'STAT', 'op': 7}]];\n      } else { reqObj = params.data; }\n      headers['Content-Type'] = headers['Content-Type'] || 'application/json';\n    }\n    headers['X-Auth-Token'] = headers['X-Auth-Token'] || params.token;\n    return this.setAuthToken().then((x) => {\n      let callObj = {\n        url: apiEndpoint,\n        method: method,\n        headers: headers\n      };\n      if (method === 'POST') { callObj.data = reqObj; }\n      callObj.headers['X-Auth-Token'] = callObj.headers['X-Auth-Token'] || x.token;\n      return this.backendSrv.datasourceRequest(callObj);\n    });\n  }\n\n  metricFindQuery(param) {\n    // TODO: build optimization to cache tables\n    let paramObj = {};\n    paramObj.url = this.url + Common.endpoints.query;\n    paramObj.table = Common.allTableTableName;\n    paramObj.select = ['name', 'fields.value'];\n    paramObj.where = [[{'name': 'name', 'value': 'STAT', 'op': 7}]];\n    paramObj.start = param.start || 'now-10m';// req_obj.end_time - 600000;\n    paramObj.end = param.end || 'now';// new Date().getTime();\n\n    return this.analyticsQuery(paramObj)\n           .then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data.value, (d, i) => {\n      return { text: d['fields.value'], value: i};\n    });\n  }\n\n  getColumns(tableName) {\n    return this.analyticsQuery({\n      url: this.url + Common.endpoints.table + '/' + tableName + Common.endpoints.tableSchema,\n      method: 'GET'\n    }).then(this.mapToValue);\n  }\n\n  mapToValue(schemaResult) {\n    let filtered = [];\n    let unfiltered = [];\n    let allCols = schemaResult.data.columns;\n\n    let filteredCols = _.filter(schemaResult.data.columns, (col) => {\n      return Common.numTypes.indexOf(col.datatype.toLowerCase()) > -1 &&\n             Common.filteredCol.indexOf(col.name.toLowerCase()) < 0;\n    });\n    _.each(filteredCols, (d, i) => {\n      filtered[i] = {text: d.name, type: d.datatype, value: i, index: d.index};\n    });\n    _.each(allCols, (d, i) => {\n      unfiltered[i] = {text: d.name, type: d.datatype, value: i, index: d.index};\n    });\n    return {filtered: filtered, unfiltered: unfiltered};\n  }\n\n  buildQueryParameters(options) {\n    options.targets = _.filter(options.targets, (target) => {\n      return !target.hide &&\n             target.table &&\n             target.table !== Common.strings.selectTable &&\n             target.selCol &&\n             target.selCol !== Common.strings.selectColumn;\n    });\n    let retVal = [];\n    _.each(options.targets, (target, i) => {\n      target = Common.filterQueryFields(target);\n      if (!Common.isValidQuery(target)) { return false; }\n      target = Common.transform(target);\n      let toTime = Common.toDate(options.range.to);\n      let fromTime = Common.toDate(options.range.from);\n      toTime = Math.round(toTime);\n      fromTime = Math.round(fromTime);\n      let timeCol = 'T';\n      let isAggField = Common.isAggregateField(target.selCol);\n      if (isAggField === true) {\n        timeCol = 'T=' + ((options.intervalMs || 60000) / 1000);\n      }\n      let qObj = {\n        'table': this.templateSrv.replace(target.table),\n        'start_time': fromTime,\n        'end_time': toTime,\n        'select_fields': [timeCol, target.selCol],\n        'where': target.where || [[{'name': 'name', 'value': '', 'op': 7}]],\n        'limit': options.maxDataPoints || 1000\n      };\n      if (target.filter && isAggField !== true) { qObj.filter = target.filter; }\n      retVal.push(qObj);\n    });\n    // options.targets = targets;\n    return retVal;\n  }\n}\n"]}